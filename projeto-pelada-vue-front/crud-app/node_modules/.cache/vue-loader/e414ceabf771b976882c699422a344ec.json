{"remainingRequest":"C:\\Users\\kraic\\eclipse-workspace\\projeto-pelada-vue\\projeto-pelada-vue-front\\crud-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\kraic\\eclipse-workspace\\projeto-pelada-vue\\projeto-pelada-vue-front\\crud-app\\node_modules\\primevue\\datatable\\DataTable.vue?vue&type=template&id=0dbc5c50&","dependencies":[{"path":"C:\\Users\\kraic\\eclipse-workspace\\projeto-pelada-vue\\projeto-pelada-vue-front\\crud-app\\node_modules\\primevue\\datatable\\DataTable.vue","mtime":499162500000},{"path":"C:\\Users\\kraic\\eclipse-workspace\\projeto-pelada-vue\\projeto-pelada-vue-front\\crud-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\kraic\\eclipse-workspace\\projeto-pelada-vue\\projeto-pelada-vue-front\\crud-app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\kraic\\eclipse-workspace\\projeto-pelada-vue\\projeto-pelada-vue-front\\crud-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\kraic\\eclipse-workspace\\projeto-pelada-vue\\projeto-pelada-vue-front\\crud-app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}